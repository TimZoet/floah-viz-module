#pragma once

////////////////////////////////////////////////////////////////
// Module includes.
////////////////////////////////////////////////////////////////

#include "floah-common/length.h"
#include "math/include_all.h"

////////////////////////////////////////////////////////////////
// Current target includes.
////////////////////////////////////////////////////////////////

#include "floah-viz/generators/generator.h"

namespace floah
{
    class TextGenerator : public Generator
    {
    public:
        ////////////////////////////////////////////////////////////////
        // Constructors.
        ////////////////////////////////////////////////////////////////

        TextGenerator();

        TextGenerator(const TextGenerator&) = delete;

        TextGenerator(TextGenerator&&) noexcept = delete;

        ~TextGenerator() noexcept override;

        TextGenerator& operator=(const TextGenerator&) = delete;

        TextGenerator& operator=(TextGenerator&&) noexcept = delete;

        ////////////////////////////////////////////////////////////////
        // Generate.
        ////////////////////////////////////////////////////////////////

        [[nodiscard]] sol::IMesh& generate(Params& params) override;

        ////////////////////////////////////////////////////////////////
        // Member variables.
        ////////////////////////////////////////////////////////////////

        std::string text;

        math::float2 position;
    };
}  // namespace floah
